spring.datasource.url= jdbc:postgresql://localhost:5432/notificationdb
spring.datasource.username=postgres
spring.datasource.password=admin123
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation= true
spring.jpa.properties.hibernate.dialect= org.hibernate.dialect.PostgreSQLDialect
# Hibernate ddl auto (create, create-drop, validate, update)
spring.jpa.hibernate.ddl-auto= update
spring.jpa.show-sql=true

dummy=hello


spring.main.allow-circular-references=true


#Swagger
spring.mvc.pathmatch.matching-strategy=ant-path-matcher

#Redis cache configuration
spring.cache.type=redis
spring.redis.host=localhost
spring.redis.port=6379
spring.cache.cache-names=niveus
spring.cache.redis.time-to-live=60000


server.port=8090
otp-attempts=2


#Twillio
FROM_PHONE_NO=+15139514949
#TO_PHONE_NO=+918549817532
TWILIO_ACCOUNT_SID=AC1bb35ff34150e4ea58733765d22ce47f
TWILIO_AUTH_TOKEN=ec17cfd0f78c60915b9dbc11616a698e



#template configuration
sms.template=OTP for :channel  with ID: :transactionId   is :otp

#kafka
spring.kafka.consumer.group-id= group_id
spring.kafka.bootstrap-servers= 127.0.0.1:9091
spring.kafka.application-id= send-validate-otp
jsonDeserializer.addTrustedPackages="*"
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.streams.properties.default.key.serde=org.apache.kafka.common.serialization.Serdes$LongSerde
spring.kafka.streams.properties.default.value.serde=org.springframework.kafka.support.serializer.JsonSerde
spring.kafka.streams.properties.spring.json.trusted.packages= "*"
spring.kafka.streams.state-dir=/tmp/kafka-streams/
spring.output.ansi.enabled=ALWAYS
